<?xml version="1.0" encoding="UTF-8"?><sqlb_project><db path="C:/codeacademy/SQL/uzduotis4.db" readonly="0" foreign_keys="1" case_sensitive_like="0" temp_store="0" wal_autocheckpoint="1000" synchronous="2"/><attached/><window><main_tabs open="structure browser pragmas query" current="3"/></window><tab_structure><column_width id="0" width="300"/><column_width id="1" width="0"/><column_width id="2" width="125"/><column_width id="3" width="1656"/><column_width id="4" width="0"/><expanded_item id="0" parent="1"/><expanded_item id="1" parent="1"/><expanded_item id="2" parent="1"/><expanded_item id="3" parent="1"/></tab_structure><tab_browse><current_table name="4,6:mainstatus"/><default_encoding codec=""/><browse_table_settings><table schema="main" name="customer" show_row_id="0" encoding="" plot_x_axis="" unlock_view_pk="_rowid_"><sort/><column_widths><column index="1" value="52"/><column index="2" value="75"/><column index="3" value="82"/><column index="4" value="145"/></column_widths><filter_values/><conditional_formats/><row_id_formats/><display_formats/><hidden_columns/><plot_y_axes/><global_filter/></table><table schema="main" name="order_" show_row_id="0" encoding="" plot_x_axis="" unlock_view_pk="_rowid_"><sort/><column_widths><column index="1" value="52"/><column index="2" value="114"/><column index="3" value="104"/><column index="4" value="90"/></column_widths><filter_values/><conditional_formats/><row_id_formats/><display_formats/><hidden_columns/><plot_y_axes/><global_filter/></table><table schema="main" name="product" show_row_id="0" encoding="" plot_x_axis="" unlock_view_pk="_rowid_"><sort/><column_widths><column index="1" value="52"/><column index="2" value="96"/><column index="3" value="76"/></column_widths><filter_values/><conditional_formats/><row_id_formats/><display_formats/><hidden_columns/><plot_y_axes/><global_filter/></table><table schema="main" name="product_order" show_row_id="0" encoding="" plot_x_axis="" unlock_view_pk="_rowid_"><sort/><column_widths><column index="1" value="83"/><column index="2" value="104"/><column index="3" value="82"/></column_widths><filter_values/><conditional_formats/><row_id_formats/><display_formats/><hidden_columns/><plot_y_axes/><global_filter/></table><table schema="main" name="status" show_row_id="0" encoding="" plot_x_axis="" unlock_view_pk="_rowid_"><sort/><column_widths><column index="1" value="52"/><column index="2" value="111"/></column_widths><filter_values/><conditional_formats/><row_id_formats/><display_formats/><hidden_columns/><plot_y_axes/><global_filter/></table></browse_table_settings></tab_browse><tab_sql><sql name="creating tables">CREATE TABLE customer (
	id INTEGER PRIMARY KEY,
	f_name string,
	l_name string,
	email string
);

CREATE TABLE status (
	id INTEGER PRIMARY KEY,
	name string
);

CREATE TABLE product (
	id INTEGER PRIMARY KEY,
	name string,
	price float
);

CREATE TABLE order_ (
	id INTEGER PRIMARY KEY,
	customer_id INTEGER,
	date_ string,
	status_id INTEGER,
	FOREIGN KEY (customer_id) REFERENCES customer (id),
	FOREIGN KEY (status_id) REFERENCES status (id)
);
	
CREATE TABLE product_order (
	order_id INTEGER PRIMARY KEY,
	product_id INTEGER,
	quantity INTEGER,
	FOREIGN KEY (order_id) REFERENCES order_ (id),
	FOREIGN KEY (product_id) REFERENCES product (id)
);
</sql><sql name="adding clients">INSERT INTO &quot;customer&quot; (&quot;id&quot;, &quot;f_name&quot;, &quot;l_name&quot;, &quot;email&quot;) VALUES (1, 'Jonas', 'Jonaitis', 'Jonas@gmail.com');
INSERT INTO &quot;customer&quot; (&quot;id&quot;, &quot;f_name&quot;, &quot;l_name&quot;, &quot;email&quot;) VALUES (2, 'Petras', 'Antanaitis', 'Petras@gmail.com');
INSERT INTO &quot;customer&quot; (&quot;id&quot;, &quot;f_name&quot;, &quot;l_name&quot;, &quot;email&quot;) VALUES (3, 'Kazys', 'Mykolaitis', 'Kazys@gmail.com');
INSERT INTO &quot;customer&quot; (&quot;id&quot;, &quot;f_name&quot;, &quot;l_name&quot;, &quot;email&quot;) VALUES (4, 'Janina', 'Janunyte', 'Janina@gmail.com');</sql><sql name="adding orders">INSERT INTO &quot;order_&quot; (&quot;id&quot;, &quot;customer_id&quot;, &quot;date_&quot;, &quot;status_id&quot;) VALUES (1, 1, '2010-10-10', 1);
INSERT INTO &quot;order_&quot; (&quot;id&quot;, &quot;customer_id&quot;, &quot;date_&quot;, &quot;status_id&quot;) VALUES (2, 2, '2011-11-11', 2);
INSERT INTO &quot;order_&quot; (&quot;id&quot;, &quot;customer_id&quot;, &quot;date_&quot;, &quot;status_id&quot;) VALUES (3, 3, '2012-12-12', 3);
INSERT INTO &quot;order_&quot; (&quot;id&quot;, &quot;customer_id&quot;, &quot;date_&quot;, &quot;status_id&quot;) VALUES (4, 1, '2009-09-09', 1);
INSERT INTO &quot;order_&quot; (&quot;id&quot;, &quot;customer_id&quot;, &quot;date_&quot;, &quot;status_id&quot;) VALUES (5, 4, '2008-08-08', 3);
INSERT INTO &quot;order_&quot; (&quot;id&quot;, &quot;customer_id&quot;, &quot;date_&quot;, &quot;status_id&quot;) VALUES (6, 4, '2007-07-07', 4);</sql><sql name="adding products">INSERT INTO &quot;product&quot; (&quot;id&quot;, &quot;name&quot;, &quot;price&quot;) VALUES (1, 'Car', 2000);
INSERT INTO &quot;product&quot; (&quot;id&quot;, &quot;name&quot;, &quot;price&quot;) VALUES (2, 'Wheelchair', 800);
INSERT INTO &quot;product&quot; (&quot;id&quot;, &quot;name&quot;, &quot;price&quot;) VALUES (3, 'Bike', 500);
INSERT INTO &quot;product&quot; (&quot;id&quot;, &quot;name&quot;, &quot;price&quot;) VALUES (4, 'Rollers', 300);
INSERT INTO &quot;product&quot; (&quot;id&quot;, &quot;name&quot;, &quot;price&quot;) VALUES (5, 'Skii', 400);</sql><sql name="adding status">INSERT INTO &quot;status&quot; (&quot;id&quot;, &quot;name&quot;) VALUES (1, 'Patvirtintas');
INSERT INTO &quot;status&quot; (&quot;id&quot;, &quot;name&quot;) VALUES (2, 'Vykdomas');
INSERT INTO &quot;status&quot; (&quot;id&quot;, &quot;name&quot;) VALUES (3, 'Ivykdytas');
INSERT INTO &quot;status&quot; (&quot;id&quot;, &quot;name&quot;) VALUES (4, 'Atmestas');</sql><sql name="adding product orders">INSERT INTO &quot;product_order&quot; (&quot;order_id&quot;, &quot;product_id&quot;, &quot;quantity&quot;) VALUES (1, 1, 1);
INSERT INTO &quot;product_order&quot; (&quot;order_id&quot;, &quot;product_id&quot;, &quot;quantity&quot;) VALUES (2, 5, 3);
INSERT INTO &quot;product_order&quot; (&quot;order_id&quot;, &quot;product_id&quot;, &quot;quantity&quot;) VALUES (3, 3, 2);
INSERT INTO &quot;product_order&quot; (&quot;order_id&quot;, &quot;product_id&quot;, &quot;quantity&quot;) VALUES (4, 2, 4);
INSERT INTO &quot;product_order&quot; (&quot;order_id&quot;, &quot;product_id&quot;, &quot;quantity&quot;) VALUES (5, 4, 1);
INSERT INTO &quot;product_order&quot; (&quot;order_id&quot;, &quot;product_id&quot;, &quot;quantity&quot;) VALUES (6, 1, 3);</sql><sql name="uzklausa2">SELECT order_.id as order_id, product.name, product_order.quantity, product.price, product_order.quantity * product.price as &quot;total&quot;
FROM order_
JOIN product_order ON product_order.order_id=order_.id
JOIN product ON product_order.product_id=product.id 


</sql><sql name="uzklausa1">SELECT 	order_.id as &quot;order id&quot;, 
		order_.date_ as &quot;date&quot;, 
		customer.l_name as &quot;customer&quot;,
        sum(product_order.quantity * product.price) as &quot;price&quot;
FROM product_order
JOIN order_ on order_.id = product_order.order_id 
JOIN product on product.id = product_order.product_id
JOIN customer on customer.id = order_.customer_id
GROUP BY order_id</sql><sql name="uzklausa 3">SELECT product.name, sum(product_order.quantity) as quantity, product.price, (sum(product_order.quantity)*product.price) as total_price FROM order_
JOIN product_order ON product_order.order_id=order_.id 
join product ON product_order.product_id=product.id
GROUP BY product.name;
</sql><sql name="bandymas">SELECT customer.f_name, customer.l_name, sum(product_order.quantity*product.price) as total
FROM  product
JOIN product_order ON product.id=product_order.product_id
JOIN order_ ON product_order.order_id=order_.id
JOIN customer ON customer.id=order_.customer_id
GROUP by l_name</sql><sql name="SQL 13">SELECT order_.date_ as data, product_order.quantity, product.name, product.price*product_order.quantity as price, status.name as statusas
FROM order_ 
JOIN product_order ON order_.id=product_order.order_id
JOIN product ON product_order.product_id=product.id
JOIN status ON order_.status_id=status.id
WHERE status.id='1' OR status.id='3'
ORDER BY date_ DESC</sql><current_tab id="10"/></tab_sql></sqlb_project>
