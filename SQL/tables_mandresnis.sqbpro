<?xml version="1.0" encoding="UTF-8"?><sqlb_project><db path="C:/codeacademy/SQL/tables.db" readonly="0" foreign_keys="1" case_sensitive_like="0" temp_store="0" wal_autocheckpoint="1000" synchronous="2"/><attached/><window><main_tabs open="structure browser pragmas query" current="3"/></window><tab_structure><column_width id="0" width="300"/><column_width id="1" width="0"/><column_width id="2" width="125"/><column_width id="3" width="2655"/><column_width id="4" width="0"/><expanded_item id="0" parent="1"/><expanded_item id="1" parent="1"/><expanded_item id="2" parent="1"/><expanded_item id="3" parent="1"/></tab_structure><tab_browse><current_table name="4,6:maincoders"/><default_encoding codec=""/><browse_table_settings><table schema="main" name="coders" show_row_id="0" encoding="" plot_x_axis="" unlock_view_pk="_rowid_"><sort/><column_widths><column index="1" value="52"/><column index="2" value="103"/><column index="3" value="99"/><column index="4" value="123"/><column index="5" value="52"/><column index="6" value="88"/><column index="7" value="80"/></column_widths><filter_values/><conditional_formats/><row_id_formats/><display_formats/><hidden_columns/><plot_y_axes/><global_filter/></table><table schema="main" name="coders_skills" show_row_id="0" encoding="" plot_x_axis="" unlock_view_pk="_rowid_"><sort/><column_widths><column index="1" value="85"/><column index="2" value="71"/></column_widths><filter_values/><conditional_formats/><row_id_formats/><display_formats/><hidden_columns/><plot_y_axes/><global_filter/></table><table schema="main" name="passwords" show_row_id="0" encoding="" plot_x_axis="" unlock_view_pk="_rowid_"><sort/><column_widths><column index="1" value="52"/><column index="2" value="85"/><column index="3" value="90"/></column_widths><filter_values/><conditional_formats/><row_id_formats/><display_formats/><hidden_columns/><plot_y_axes/><global_filter/></table><table schema="main" name="skills" show_row_id="0" encoding="" plot_x_axis="" unlock_view_pk="_rowid_"><sort/><column_widths><column index="1" value="52"/><column index="2" value="57"/></column_widths><filter_values/><conditional_formats/><row_id_formats/><display_formats/><hidden_columns/><plot_y_axes/><global_filter/></table><table schema="main" name="tasks" show_row_id="0" encoding="" plot_x_axis="" unlock_view_pk="_rowid_"><sort/><column_widths><column index="1" value="52"/><column index="2" value="192"/><column index="3" value="106"/><column index="4" value="85"/></column_widths><filter_values/><conditional_formats/><row_id_formats/><display_formats/><hidden_columns/><plot_y_axes/><global_filter/></table><table schema="main" name="teams" show_row_id="0" encoding="" plot_x_axis="" unlock_view_pk="_rowid_"><sort/><column_widths><column index="1" value="52"/><column index="2" value="79"/></column_widths><filter_values/><conditional_formats/><row_id_formats/><display_formats/><hidden_columns/><plot_y_axes/><global_filter/></table></browse_table_settings></tab_browse><tab_sql><sql name="SQL 1">CREATE TABLE coders (
	id INTEGER PRIMARY KEY NOT NULL,
	first_name VARCHAR(50) NOT NULL,
	last_name VARCHAR(100) NOT NULL,
	email VARCHAR(255) UNIQUE,
	age INTEGER CHECK (age &gt; 17 AND age &lt; 75),
	xp_years INTEGER CHECK (xp_years &gt; 0 AND xp_years &lt; 50),
	team_id INTEGER,
	FOREIGN KEY (team_id) REFERENCES teams (id)
	);
-- foreign key rasomas toje duombazeje, kurioje bus daug keys (one-to-many)
ALTER TABLE CODERS ADD COLUMN project_id INTEGER;
ALTER TABLE CODERS ADD COLUMN team_id INTEGER;
DROP TABLE coders;

CREATE TABLE teams (
	id INTEGER PRIMARY KEY NOT NULL,
	name VARCHAR(50) NOT NULL
	);
-- SQLite neveikia mandresnes funkcijos 	
-- ALTER TABLE coders ADD CONSTRAINT fk_coders_teams FOREIGN KEY (team_id) REFERENCES teams (id);

CREATE TABLE tasks (
	id INTEGER PRIMARY KEY NOT NULL,
	name VARCHAR(255) NOT NULL,
	description TEXT,
	coder_id INTEGER,
	FOREIGN KEY (coder_id) REFERENCES coders (id)
	);
	-- cia taip pat vienas programuotojas gali tureti daug uzduociu</sql><sql name="insrt into teams">INSERT INTO &quot;teams&quot; (&quot;name&quot;) VALUES ('Back End');
INSERT INTO &quot;teams&quot; (&quot;name&quot;) VALUES ('DevOps');
INSERT INTO &quot;teams&quot; (&quot;name&quot;) VALUES ('Front End');
</sql><sql name="insrt into coders">INSERT INTO &quot;coders&quot; (&quot;first_name&quot;, &quot;last_name&quot;, &quot;email&quot;, &quot;age&quot;, &quot;team_id&quot;) VALUES ('Jonas', 'Jonaitis', 'jj@gmail.com', '20', '1');
INSERT INTO &quot;coders&quot; (&quot;first_name&quot;, &quot;last_name&quot;, &quot;email&quot;, &quot;age&quot;, &quot;team_id&quot;) VALUES ('Antanas', 'Antanaitis', 'aa@gmail.com', '25', '1');
INSERT INTO &quot;coders&quot; (&quot;first_name&quot;, &quot;last_name&quot;, &quot;email&quot;, &quot;age&quot;, &quot;team_id&quot;) VALUES ('Juozas', 'Juozaitis', 'jj@hotmail.com', '30', '2');
INSERT INTO &quot;coders&quot; (&quot;first_name&quot;, &quot;last_name&quot;, &quot;email&quot;, &quot;age&quot;, &quot;team_id&quot;) VALUES ('Petras', 'Petraitis', 'pp@mail.lt', '29', '2');
INSERT INTO &quot;coders&quot; (&quot;first_name&quot;, &quot;last_name&quot;, &quot;email&quot;, &quot;age&quot;, &quot;team_id&quot;) VALUES ('Virgis', 'Virgutis', 'vv@gmail.com', '21', '3');
INSERT INTO &quot;coders&quot; (&quot;first_name&quot;, &quot;last_name&quot;, &quot;email&quot;, &quot;age&quot;, &quot;team_id&quot;) VALUES ('Tomas', 'Aidietis', 'ta@imone.lt', '35', '3');

UPDATE coders SET xp_years = round((age - 18)/2);

</sql><sql name="insrt into tasks">INSERT INTO &quot;tasks&quot; (&quot;name&quot;, &quot;coder_id&quot;) VALUES ('Sutvarkyti DB', '5');
INSERT INTO &quot;tasks&quot; (&quot;name&quot;, &quot;coder_id&quot;) VALUES ('Perdaryti dizainą', '1');
INSERT INTO &quot;tasks&quot; (&quot;name&quot;, &quot;coder_id&quot;) VALUES ('Perdaryti formas', '2');
INSERT INTO &quot;tasks&quot; (&quot;name&quot;, &quot;coder_id&quot;) VALUES ('Atnaujinti tvarkykles', '6');
INSERT INTO &quot;tasks&quot; (&quot;name&quot;, &quot;coder_id&quot;) VALUES ('Perkrauti serverius', '5');
INSERT INTO &quot;tasks&quot; (&quot;name&quot;, &quot;coder_id&quot;) VALUES ('Atnaujinti bibliotekas', '6');
INSERT INTO &quot;tasks&quot; (&quot;name&quot;, &quot;coder_id&quot;) VALUES ('Pakeisti logotipus', '2');
INSERT INTO &quot;tasks&quot; (&quot;name&quot;, &quot;coder_id&quot;) VALUES ('Atnaujinti dokumentaciją', '3');
INSERT INTO &quot;tasks&quot; (&quot;name&quot;, &quot;coder_id&quot;) VALUES ('Ištestuoti programą', '4');
INSERT INTO &quot;tasks&quot; (&quot;name&quot;, &quot;coder_id&quot;) VALUES ('Perdaryti API', '4');</sql><sql name="added tbl skills">CREATE TABLE skills (
	id INTEGER PRIMARY KEY NOT NULL,
	name VARCHAR(50)
);

INSERT INTO &quot;skills&quot; (&quot;name&quot;) VALUES ('Python');
INSERT INTO &quot;skills&quot; (&quot;name&quot;) VALUES ('JS');
INSERT INTO &quot;skills&quot; (&quot;name&quot;) VALUES ('CSS');
INSERT INTO &quot;skills&quot; (&quot;name&quot;) VALUES ('Go');
INSERT INTO &quot;skills&quot; (&quot;name&quot;) VALUES ('AWS');
INSERT INTO &quot;skills&quot; (&quot;name&quot;) VALUES ('Linux');

</sql><sql name="add coder skills tbl">CREATE TABLE coders_skills (
	coder_id INTEGER,
	skill_id INTEGER,
	FOREIGN KEY (coder_id) REFERENCES coders(id),
	FOREIGN KEY (skill_id) REFERENCES skills(id)
	);
	
</sql><sql name="insrt coder skills">INSERT INTO &quot;coders_skills&quot; (&quot;coder_id&quot;, &quot;skill_id&quot;) VALUES ('1', '2');
INSERT INTO &quot;coders_skills&quot; (&quot;coder_id&quot;, &quot;skill_id&quot;) VALUES ('1', '3');
INSERT INTO &quot;coders_skills&quot; (&quot;coder_id&quot;, &quot;skill_id&quot;) VALUES ('2', '2');
INSERT INTO &quot;coders_skills&quot; (&quot;coder_id&quot;, &quot;skill_id&quot;) VALUES ('2', '3');
INSERT INTO &quot;coders_skills&quot; (&quot;coder_id&quot;, &quot;skill_id&quot;) VALUES ('3', '1');
INSERT INTO &quot;coders_skills&quot; (&quot;coder_id&quot;, &quot;skill_id&quot;) VALUES ('3', '4');
INSERT INTO &quot;coders_skills&quot; (&quot;coder_id&quot;, &quot;skill_id&quot;) VALUES ('4', '1');
INSERT INTO &quot;coders_skills&quot; (&quot;coder_id&quot;, &quot;skill_id&quot;) VALUES ('4', '6');
INSERT INTO &quot;coders_skills&quot; (&quot;coder_id&quot;, &quot;skill_id&quot;) VALUES ('5', '4');
INSERT INTO &quot;coders_skills&quot; (&quot;coder_id&quot;, &quot;skill_id&quot;) VALUES ('5', '5');
INSERT INTO &quot;coders_skills&quot; (&quot;coder_id&quot;, &quot;skill_id&quot;) VALUES ('6', '5');
INSERT INTO &quot;coders_skills&quot; (&quot;coder_id&quot;, &quot;skill_id&quot;) VALUES ('6', '6');
</sql><sql name="many2many">SELECT first_name, last_name, skills.name FROM coders_skills
JOIN coders ON coder_id = coders.id
JOIN skills ON skill_id = skills.id;</sql><sql name="one2one">CREATE TABLE passwords (
	id INTEGER PRIMARY KEY NOT NULL,
	coder_id INTEGER UNIQUE,
	pwd VARCHAR(255),
	FOREIGN KEY (coder_id) REFERENCES coders(id)
);
INSERT INTO &quot;passwords&quot; (&quot;coder_id&quot;, &quot;pwd&quot;) VALUES ('1', '12345');
INSERT INTO &quot;passwords&quot; (&quot;coder_id&quot;, &quot;pwd&quot;) VALUES ('2', 'verisykret');
INSERT INTO &quot;passwords&quot; (&quot;coder_id&quot;, &quot;pwd&quot;) VALUES ('3', 'qwerty');
INSERT INTO &quot;passwords&quot; (&quot;coder_id&quot;, &quot;pwd&quot;) VALUES ('4', 'uauauai');
INSERT INTO &quot;passwords&quot; (&quot;coder_id&quot;, &quot;pwd&quot;) VALUES ('5', 'slaptazodis');
INSERT INTO &quot;passwords&quot; (&quot;coder_id&quot;, &quot;pwd&quot;) VALUES ('6', 'barzda');

SELECT first_name, passwords.pwd FROM coders
JOIN passwords ON passwords.coder_id=coders.id;

SELECT first_name, pwd FROM passwords
JOIN coders ON passwords.coder_id = coders.id;</sql><current_tab id="5"/></tab_sql></sqlb_project>
