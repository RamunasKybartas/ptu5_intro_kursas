<?xml version="1.0" encoding="UTF-8"?><sqlb_project><db path="C:/codeacademy/SQL/cars.db" readonly="0" foreign_keys="1" case_sensitive_like="0" temp_store="0" wal_autocheckpoint="1000" synchronous="2"/><attached/><window><main_tabs open="structure browser pragmas query" current="3"/></window><tab_structure><column_width id="0" width="300"/><column_width id="1" width="0"/><column_width id="2" width="125"/><column_width id="3" width="1475"/><column_width id="4" width="0"/><expanded_item id="0" parent="1"/><expanded_item id="1" parent="1"/><expanded_item id="2" parent="1"/><expanded_item id="3" parent="1"/></tab_structure><tab_browse><current_table name="4,4:maincars"/><default_encoding codec=""/><browse_table_settings><table schema="main" name="cars" show_row_id="0" encoding="" plot_x_axis="" unlock_view_pk="_rowid_"><sort/><column_widths><column index="1" value="120"/><column index="2" value="117"/><column index="3" value="96"/><column index="4" value="52"/><column index="5" value="52"/></column_widths><filter_values/><conditional_formats/><row_id_formats/><display_formats/><hidden_columns/><plot_y_axes/><global_filter/></table></browse_table_settings></tab_browse><tab_sql><sql name="SQL 1">-- platesnis where panaudojimas, between AND
SELECT * FROM cars WHERE price BETWEEN 10000 and 30000;
-- galim atikrinti ir pagal sarasa
SELECT * from cars WHERE year in (2005, 2010, 2011) ORDER by year;
-- paieska texte
select * FROM cars WHERE make like &quot;t%&quot;;
select * FROM cars WHERE make like &quot;%a&quot;;
select * FROM cars WHERE make like &quot;%t%&quot;;
-- placeholderis
SELECT * FROM cars WHERE model like &quot;__&quot;;
SELECT * FROM cars WHERE model like &quot;X_&quot;;
SELECT * FROM cars WHERE model like &quot;X%&quot;;
select * FROM cars WHERE make like &quot;__n%&quot;;
-- NULL
SELECT * FROM cars WHERE color is NULL;

UPDATE cars SET color=&quot;Ugly&quot; WHERE color is NULL;
SELECT * FROM cars WHERE color is &quot;Ugly&quot;;
-- and, or, not salygos
SELECT * FROM cars WHERE make=&quot;Ford&quot; AND price&gt;40000;
select * FROM cars WHERE (price&lt;40000 or color =&quot;Pink&quot;) AND year &gt; 2000;
SELECT * FROM cars WHERE color not in (&quot;Violet&quot;, &quot;Pink&quot;, &quot;Yellow&quot;, &quot;Ugly&quot;, &quot;Turquoise&quot;, &quot;Red&quot;, &quot;Maroon&quot;);
SELECT * FROM cars WHERE (make = &quot;Volvo&quot; or make = &quot;Ford&quot;) and price NOT BETWEEN 10000 and 50000;
-- rusiavimas
SELECT * FROM cars ORDER by year desc LIMIT 5;
SELECT * FROM cars ORDER by year desc LIMIT 5 OFFSET 5;
select * FROM cars ORDER by make;
-- nekreipti demesio i raidziu dydi
select * FROM cars WHERE make=&quot;toyota&quot; COLLATE nocase;
-- rezultatu manipuliavimas su || operatorium
SELECT &quot;Gamintojas: &quot; || make as gamintojas, model as modelis FROM cars LIMIT 10;
SELECT make, model, price, round(price/3.4528, 2) as kaina_eur FROM cars;
SELECT make || &quot; &quot; || model || &quot; , &quot; || year as car_model_year FROM cars ORDER by year;
-- amziaus skaiciavimas
SELECT make, model, 2022 - year as age from cars order by age;
SELECT make, model, price, round(price/1.18) as price_ex_vat from cars order by price_ex_vat;
-- teisingas grupavimas
--avg()
--min() max()
--count()
--sum()
SELECT sum(price) from cars;
select make, sum(price) from cars GROUP by make;
SELECT make, avg(year) FROM cars group by make;
SELECT make, avg(year), count(*) FROM cars GROUP by make HAVING count(*) &gt; 1;
SELECT make, avg(price), count(*) FROM cars GROUP by make HAVING count(*) &gt; 1;
select min(price), max(price), avg(price) from cars;
SELECT max(price), make, model from cars;
select color, max(price), make, model, count(*) FROM cars GROUP by color order by price desc;
select color, min(price), make, model, count(*) FROM cars GROUP by color order by price desc;
select color, round(avg(price)), make, model, count(*) FROM cars GROUP by color order by price desc;</sql><sql name="SQL 2">SELECT make, model, year, max(price), color, count(*)
FROM cars
WHERE make NOT in (&quot;Toyota&quot;, &quot;Mercury&quot;, &quot;Volvo&quot;) and color NOT in (&quot;Pink&quot;, &quot;Turquoise&quot;)
GROUP by year
HAVING count(*) &gt; 1
ORDER by max(price) DESC;</sql><current_tab id="1"/></tab_sql></sqlb_project>
